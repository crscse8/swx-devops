version: "2"

volumes:
  traefik-ssl:
    driver: local
  datahub-data:
    driver: local
  postgres-data:
    driver: local
  guacamole-data:
    driver: local
  database_repository:
    driver: local
  flowfile_repository:
    driver: local
  content_repository:
    driver: local
  provenance_repository:
    driver: local

services:

  converge:
    extends:
      file: converge/docker-compose.yml
      service: converge
    network_mode: host
    privileged: true
    volumes:
      - /:/chroot
    labels:
      - "traefik.enable=false"

  traefik:
    container_name: traefik
    hostname: traefik
    build: docker-traefik/
    image: sofwerx/traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - default
    environment:
      REST_PORT: "7080"
      HTTP_PORT: "80"
      HTTPS_PORT: "443"
      EMAIL: "devops@sofwerx.org"
      DNS_DOMAIN: ${DNS_DOMAIN}
      SUBDOMAINS: ${SUBDOMAINS}
#      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
#      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
#      AWS_REGION: ${AWS_REGION}
    volumes:
      - traefik-ssl:/ssl
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=7080"
      - "traefik.frontend.rule=Host:traefik.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  postgres:
    extends:
      file: docker-guacamole/docker-compose.yml
      service: postgres
    networks:
      - default
    volumes:
      - postgres-data:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  guacd:
    extends:
      file: docker-guacamole/docker-compose.yml
      service: guacd
    networks:
      - default
    volumes:
      - traefik-ssl:/ssl
    labels:
      - "traefik.enable=false"

  guacamole:
    extends:
      file: docker-guacamole/docker-compose.yml
      service: guacamole
    networks:
      - default
    volumes:
      - guacamole-data:/data
      - traefik-ssl:/ssl
    labels:
      - "traefik.enable=true"
      - "traefik.backend=guacamole"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:guacamole.${DNS_DOMAIN};AddPrefix:/guacamole"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  nifi:
    extends:
      file: docker-nifi/docker-compose.yml
      service: nifi
    build: docker-nifi/
    image: sofwerx/nifi
    networks:
      - default
    ports:
      - "8080:8080"
      - "8181:8181"
    volumes:
      - database_repository:/opt/nifi/nifi-1.4.0/database_repository
      - flowfile_repository:/opt/nifi/nifi-1.4.0/flowfile_repository
      - content_repository:/opt/nifi/nifi-1.4.0/content_repository
      - provenance_repository:/opt/nifi/nifi-1.4.0/provenance_repository
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nifi"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:nifi.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  datahub:
    build: docker-marklogic/
    container_name: datahub
    hostname: datahub
    environment:
      ML_CONFIG: |
        AUTH_MODE="anyauth"
        PASSWORD="admin"
        USER="admin"
        SEC_REALM="public"
        LICENSE_FILE_FOLDER=/opt
        VERSION=8
        HOST_NAME=`hostname`
    volumes:
      - datahub-data:/data
    ports:
      - "7997:7997" # health-check
      - "7998:7998" # cluster-port
      - "7999:7999" # cluster-port2
      - "8000:8000" # app-services
      - "8001:8001" # admin
      - "8002:8002" # manage
      - "8040:8040"
      - "8041:8041"
      - "8042:8042"
      - "8043:8043"
      - "8044:8044"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=marklogic"
      - "traefik.port=8000"
      - "traefik.frontend.rule=Host:marklogic.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"


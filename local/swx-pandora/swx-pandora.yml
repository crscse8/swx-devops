version: '2.1'

x-logging:
  &default-logging
  options:
    max-size: '12m'
    max-file: '5'
  driver: json-file

networks:
  default:
    driver: bridge

volumes:
  traefik-ssl:
    driver: local
  mysql-data:
    driver: local
  pandorafms-data:
    driver: local
#  tmate-keys:
#    driver: local
  takserver-logs:
    driver: local
  takserver-certs:
    driver: local

services:
  traefik:
    extends:
      file: docker-traefik/docker-compose.yml
      service: traefik
    volumes:
      - traefik-ssl:/ssl
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - default
    environment:
      REST_PORT: "7080"
      HTTP_PORT: "80"
      HTTPS_PORT: "443"
      EMAIL: "devops@sofwerx.org"
      DNS_DOMAIN: ${DNS_DOMAIN}
      SUBDOMAINS: ${SUBDOMAINS}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=7080"
      - "traefik.frontend.rule=Host:traefik.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  pandora-mysql:
    image: pandorafms/pandorafms-mysql:6
    container_name: pandora-mysql
    hostname: pandora-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PANDORA_DB_NAME}
      MYSQL_USER: ${PANDORA_DB_USER}
      MYSQL_PASSWORD: ${PANDORA_DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - default
    restart: always
    healthcheck:
      test: mysqladmin -h localhost -u $${MYSQL_USER} -p$${MYSQL_PASSWORD} ping
      timeout: 20s
      retries: 10
    logging: *default-logging
    labels:
      - "traefik.enable=false"

  pandora-server:
    build: docker-pandorafms/pandorafms-server/
    image: pandorafms/pandorafms-server:6
    container_name: pandora-server
    hostname: pandora-server
    volumes:
      - traefik-ssl:/ssl
    environment:
      PANDORA_DB_HOST: ${PANDORA_DB_HOST}
      PANDORA_DB_NAME: ${PANDORA_DB_NAME}
      PANDORA_DB_USER: ${PANDORA_DB_USER}
      PANDORA_DB_PASSWORD: ${PANDORA_DB_PASSWORD}
    ports:
      - 41121:41121
    depends_on:
      pandora-mysql:
        condition: service_healthy
    networks:
      - default
    restart: always
    logging: *default-logging
    labels:
      - "traefik.enable=false"

  pandora-console:
    build: docker-pandorafms/pandorafms-console/
    image: pandorafms/pandorafms-console:6
    container_name: pandora-console
    hostname: console.${DNS_DOMAIN}
    volumes:
      - traefik-ssl:/ssl
    ports:
#    - 80:80
    - 60080:80
    - 8022:8022
    - 8023:8023
    environment:
      PANDORA_DB_HOST: ${PANDORA_DB_HOST}
      PANDORA_DB_NAME: ${PANDORA_DB_NAME}
      PANDORA_DB_USER: ${PANDORA_DB_USER}
      PANDORA_DB_PASSWORD: ${PANDORA_DB_PASSWORD}
      HOMEURL: /pandora_console
      PUBLIC_URL: https://console.${DNS_DOMAIN}/pandora_console
      HTTPS: 'true'
    depends_on:
      pandora-mysql:
        condition: service_healthy
    networks:
      - default
    restart: always
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.backend=console"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:console.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

#  tmate:
#    extends:
#      file: docker-tmate-slave/docker-compose.yml
#      service: tmate
#    volumes:
#      - tmate-keys:/keys
#    restart: always
#    ports:
#      - 10022:10022
#    environment:
#      TMATE_HOST: tmate.${DNS_DOMAIN}
#      TMATE_PORT: 10022
#    networks:
#      - default
#    logging: *default-logging
#    labels:
#      - "traefik.enable=false"

  takserver:
    extends:
      file: docker-tak/docker-compose.yml
      service: takserver
    restart: always
    network_mode: host
    logging: *default-logging
    volumes:
      - takserver-logs:/opt/tak/logs
      - takserver-certs:/opt/tak/certs
    environment:
      ENABLE_TLS: 1
      ANNOUNCE_ADDRESS: 192.168.16.100
      TAKSERVER_USER: $TAKSERVER_USER
      TAKSERVER_PASSWORD: $TAKSERVER_PASSWORD
    labels:
      - "traefik.enable=true"
      - "traefik.backend=tak"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:tak.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  takreflector:
    extends:
      file: docker-tak/docker-compose.yml
      service: takreflector
    restart: always
    network_mode: host
    environment:
      INPUT_ADDRESS: 192.168.16.100
      FORCED_WIDTH: 1280
      FORCED_HEIGHT: 720
    logging: *default-logging
    labels:
      - "traefik.enable=false"

#  takplayrecording1:
#    extends:
#      file: docker-tak/docker-compose.yml
#      service: takplayrecording1
#    restart: always
#    network_mode: host
#    command: /takplayrecording.sh ./publish_file --output-address 192.168.16.100 --output-port 3080 --input-file raven1
#    logging: *default-logging
#    labels:
#      - "traefik.enable=false"


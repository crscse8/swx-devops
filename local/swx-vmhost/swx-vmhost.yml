version: "2.1"

x-logging:
  &default-logging
  options:
    max-size: '12m'
    max-file: '5'
  driver: json-file

networks: 
  default:
    driver: bridge

volumes:
  traefik-ssl:
    driver: local
  neo4j-data:
    driver: local

services:

  glo:
    extends:
      file: glo/docker-compose.yml
      service: glo
    image: sofwerx/glo
    container_name: glo
    hostname: glo
    restart: always
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.backend=glo"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:glo.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=false"
      - "traefik.frontend.entryPoints=http,https"

  glo-services:
    extends:
      file: glo-services/docker-compose.yml
      service: glo-services
    image: sofwerx/glo-services
    container_name: glo-services
    hostname: glo-services
    restart: always
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.backend=glo-services"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:glo.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=false"
      - "traefik.frontend.entryPoints=http,https"


  glo-demo:
    extends:
      file: glo-demo/docker-compose.yml
      service: glo-demo
    image: sofwerx/glo-demo
    container_name: glo-demo
    hostname: glo-demo
    restart: always
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.backend=glo-demo"
      - "traefik.port=4200"
      - "traefik.frontend.rule=Host:glo-demo.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=false"
      - "traefik.frontend.entryPoints=http,https"

  traefik:
    extends:
      file: docker-traefik/docker-compose.yml
      service: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - default
    environment:
      REST_PORT: "7080"
      HTTP_PORT: "80"
      HTTPS_PORT: "443"
      EMAIL: "devops@sofwerx.org"
      DNS_DOMAIN: ${DNS_DOMAIN}
      SUBDOMAINS: ${SUBDOMAINS}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    logging: *default-logging
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=7080"
      - "traefik.frontend.rule=Host:traefik.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  neo4j:
    extends:
      file: docker-neo4j/docker-compose.yml
      service: neo4j
    image: neo4j:latest
    restart: always
    networks: 
      - default
    ports:
      - 7687:7687
      - 7474:7474
      - 7473:7473
    volumes:
      - traefik-ssl:/ssl
      - neo4j-data:/var/lib/neo4j
    labels:
      - "traefik.enable=true"
      - "traefik.backend=neo4j"
      - "traefik.port=7474"
      - "traefik.frontend.rule=Host:neo4j.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  cesium:
    extends:
      file: docker-cesium/docker-compose.yml
      service: cesium
    image: sofwerx/cesium
    restart: always
    logging: *default-logging
    networks:
      - default
    volumes:
      - traefik-ssl:/ssl
    labels:
      - "traefik.enable=true"
      - "traefik.backend=cesium"
      - "traefik.port=8088"
      - "traefik.frontend.rule=Host:cesium.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"


version: "3.4"

networks:

  orange_default:
    external:
      name: orange_default

services:

  traefik:
    hostname: traefik
    build: traefik/
    image: sofwerx/traefik
    restart: "on-failure"
    ports:
      - 443:443
      - 80:80
    networks:
      - orange_default
    environment:
      HTTP_PORT: "80"
      HTTPS_PORT: "443"
      REST_PORT: "8080"
      EMAIL: "devops@sofwerx.org"
      DNS_DOMAIN: ${DNS_DOMAIN}
      SUBDOMAINS: ${SUBDOMAINS}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      DOCKER_SWARMMODE: "true"
      CONSUL_HOST: consul_consul
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >-
      --loglevel DEBUG
      --web
      --web.address=":8080"
      --docker
      --docker.endpoint="unix:///var/run/docker.sock"
      --docker.domain="${DNS_DOMAIN}"
      --docker.swarmmode
      --docker.watch
      --exposedbydefault=false
      --consul
      --consul.endpoint="consul_consul:8500"
      --consul.watch
      --consul.prefix="traefik"
      --entrypoints="Name:http Address::80"
      --entrypoints="Name:https Address::443 TLS"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"
          - "engine.labels.storage-constrained != true"
      labels:
        - "traefik.enable=true"
        - "traefik.backend=traefik"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.backend.loadbalancer.method=wrr"
        - "traefik.port=8080"
        - "traefik.frontend.rule=Host:traefik.${DNS_DOMAIN}"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.frontend.entryPoints=http,https"


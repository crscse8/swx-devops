version: "3.3"

networks:

  default:
    external:
      name: orange_default

volumes:
  elasticsearch-data:
    driver: local

services:

  elasticsearchmaster:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.4
    command: elasticsearch
    restart: "on-failure"
    environment:
      SERVICE_NAME: "elasticsearch"
      cluster.name: "elasticsearch-cluster"
      bootstrap.memory_lock: "true"
      network.host: "0.0.0.0"
      discovery.zen.ping.multicast.enabled: "false"
      discovery.zen.ping.unicast.hosts: "elasticsearch"
      discovery.zen.minimum_master_nodes: "3"
      node.master: "true"
      node.data: "false"
      node.ingest: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m -XX:-AssumeMP"
      XPACK_SECURITY_ENABLED: 'false'
    deploy:
      mode: replicated
      replicas: 5
      placement:
        constraints:
          - "node.role == manager"
      labels:
        - "traefik.enable=false"
      resources:
        limits:
          memory: 1g

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.4
    ports:
      - 9200:9200
      - 9300:9300
    command: elasticsearch
    restart: "on-failure"
    environment:
      SERVICE_NAME: "elasticsearch"
      cluster.name: "elasticsearch-cluster"
      bootstrap.memory_lock: "true"
      network.host: "0.0.0.0"
      discovery.zen.ping.multicast.enabled: "false"
      discovery.zen.ping.unicast.hosts: "elasticsearch"
      node.max_local_storage_nodes: 8
      node.master: "false"
      node.data: "true"
      node.ingest: "true"
      ES_JAVA_OPTS: "-Xms4g -Xmx4g -XX:-AssumeMP"
      XPACK_SECURITY_ENABLED: 'false'
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
      nproc: 65538
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      mode: global
      placement:
        constraints:
          - "engine.labels.storage-constrained != true"
      labels:
        - "traefik.enable=false"
      resources:
        limits:
          memory: 4g

  kibana:
    image: docker.elastic.co/kibana/kibana:5.6.4
    ports:
      - "5601:5601"
    restart: "on-failure"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      server.port: "5601"
      XPACK_SECURITY_ENABLED: 'false'
    healthcheck:
      test: wget -qO- http://localhost:5601 > /dev/null
      interval: 30s
      retries: 100
    deploy:
      mode: global
      labels:
        - "traefik.backend=kibana"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.port=5601"
        - "traefik.frontend.rule=Host:kibana.${DNS_DOMAIN}"
        - "traefik.frontend.passHostHeader=true"
        - "traefik.frontend.entryPoints=http,https"

#  filebeat:
#    image: docker.elastic.co/beats/filebeat:5.6.4
#    restart: "on-failure"
#    volumes:
#     - /var/run/docker.sock:/tmp/docker.sock
#    deploy:
#      mode: global

#  heartbeat:
#    image: docker.elastic.co/beats/hearbeat:5.6.4
#    restart: "on-failure"
#    deploy:
#      mode: global

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:5.6.4
    restart: "on-failure"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
    pid: "host"
    volumes:
     - /proc:/hostfs/proc:ro \ 
     - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro \ 
     - /:/hostfs:ro
#    command: -system.hostfs=/hostfs
    deploy:
      mode: global

#  packetbeat:
#    image: docker.elastic.co/beats/packetbeat:5.6.4
#    restart: true
##    network_mode: host
#    cap_add:
#      - NET_ADMIN
#    volumes:
#     - /var/run/docker.sock:/tmp/docker.sock
#    deploy:
#      mode: global

  logstash:
    image: docker.elastic.co/logstash/logstash:5.6.4
    command: sh -c "exec logstash -e 'input { syslog  { type => syslog port => 10514   } gelf { } } output { stdout { codec => rubydebug } elasticsearch { hosts => [ \"elasticsearch\" ] user => elastic password => changeme } }'"
    restart: "on-failure"
    ports:
        - "10514:10514/tcp"
        - "10514:10514/udp"
        - "12201:12201/udp"
    deploy:
      mode: global
      labels:
        - "traefik.enable=false"


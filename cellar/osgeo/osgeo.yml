version: '2'

networks: 
  default:
    driver: bridge

volumes:
  traefik-ssl:
    driver: local
  postgres-data:
    driver: local
  guacamole-data:
    driver: local
  rethink-data:
    driver: local
  wowza-logs:
    driver: local
  wowza-data:
    driver: local

services:

  traefik:
    extends:
      file: docker-traefik/docker-compose.yml
      service: traefik
    restart: always
    ports:
      - 9080:80
      - 9443:443
    networks:
      - default
    environment:
      REST_PORT: "7080"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=7080"
      - "traefik.frontend.rule=Host:traefik.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  postgres:
    extends:
      file: docker-guacamole/docker-compose.yml
      service: postgres
    restart: always
    networks:
      - default
    volumes:
      - postgres-data:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  adminer:
    extends:
      file: docker-guacamole/docker-compose.yml
      service: adminer
    restart: always
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.backend=adminer"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:adminer.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  guacd:
    extends:
      file: docker-guacamole/docker-compose.yml
      service: guacd
    restart: always
    networks:
      - default
    volumes:
      - traefik-ssl:/ssl

  guacamole:
    extends:
      file: docker-guacamole/docker-compose.yml
      service: guacamole
    restart: always
    networks:
      - default
    volumes:
      - guacamole-data:/data
      - traefik-ssl:/ssl
    labels:
      - "traefik.enable=true"
      - "traefik.backend=guacamole"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:guacamole.${DNS_DOMAIN};AddPrefix:/guacamole"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

  rethinkdb:
    extends:
      file: docker-openstf/docker-compose.yml
      service: rethinkdb
    hostname: rethinkdb
    container_name: rethinkdb
    restart: always
    networks:
      - default
    volumes:
      - rethink-data:/data
    labels:
      - "traefik.enable=false"

  adbd:
    extends:
      file: docker-openstf/docker-compose.yml
      service: adbd
    hostname: adbd
    container_name: adbd
    restart: always
    networks:
      - default
    labels:
      - "traefik.enable=false"

  stf:
    extends:
      file: docker-openstf/docker-compose.yml
      service: stf-local
    hostname: stf
    container_name: stf
    restart: always
    depends_on:
      - adbd
      - rethinkdb
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.backend=stf"
      - "traefik.port=7100"
      - "traefik.frontend.rule=Host:stf.${DNS_DOMAIN}"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.frontend.entryPoints=http,https"

#  wse:
#    image: wowzamedia/wowza-streaming-engine-linux:4.7.1
#    container_name: wowza
#    hostname: wowza
#    restart: always
#    ports:
#      - "1935:1935"
#      - "8086:8086"
#      - "8087:8087"
#      - "8088:8088"
#    volumes:
#      - "wowza-logs:/usr/local/WowzaStreamingEngine/logs"
#    environment:
#      WSE_MGR_USER: 'admin'
#      WSE_MGR_PASS: ${WSE_MGR_PASS}
#
#    command:
#      - /sbin/entrypoint.sh


